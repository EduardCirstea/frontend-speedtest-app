import { combineReducers, configureStore } from "@reduxjs/toolkit";
import { persistReducer, persistStore } from "redux-persist";
import createFilter from "redux-persist-transform-filter";
import storage from "redux-persist/lib/storage";

// Import the reducer generated by `createSlice`
import authReducer from "../features/authSlice.ts"; // The default export is the reducer

// Transform filter to save only specific parts of the state
const saveUserOnlyFilter = createFilter("user", ["user"]);

const persistConfig = {
  key: "root", // Typically, the root key is used here
  storage,
  whitelist: ["user"], // Persist only the "user" slice of state
  transforms: [saveUserOnlyFilter],
};

// Combine reducers
const rootReducer = combineReducers({
  user: authReducer,
});

const persistedReducer = persistReducer(persistConfig, rootReducer);

export const store = configureStore({
  reducer: persistedReducer,
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware({
      serializableCheck: false, // Disable serializable check for persistence
    }),
  devTools: true, // Enable Redux DevTools
});

export const persistor = persistStore(store);

// Export types for use in your application
export type AppDispatch = typeof store.dispatch;
export type RootState = ReturnType<typeof store.getState>;
